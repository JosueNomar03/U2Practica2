
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.Serializable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class CampoTextHint extends javax.swing.JPanel implements Serializable{
    private String hint ="[[CampoTextoHint]]";
    private Color colorGris = new Color(204,204,204);
    enum tipoCampo{CADENA, NUMERICO};
    private tipoCampo tipo = tipoCampo.CADENA;
    
    /**
     * Creates new form CampoTextHint
     */
    public void setTipoCampo (tipoCampo tipo){
        this.tipo = tipo;
    }
    public tipoCampo getTipoCampo(){
    return tipo;
    }
    public void setHint(String texto){
        hint = texto;
        jTextField1.setText(hint);
    }
    public String getHint(){
        return hint;
    }
    public CampoTextHint() {
        initComponents();
        jTextField1.setText(hint);
        jTextField1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent fe) {
            if(jTextField1.getText().equals(hint)==true){
                jTextField1.setText("");
                jTextField1.setForeground(Color.BLACK);
            }//if
            }//FocusGained
            @Override
            public void focusLost(FocusEvent fe) {
                if(jTextField1.getText().equals("")==true){
                    jTextField1.setText(hint);
                    jTextField1.setForeground(colorGris);
                }//if
            }//FocusLost
        });
        jTextField1.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
               char tecla = e.getKeyChar();
               
               if(tipo == tipoCampo.NUMERICO){
                   if(( (tecla<48) || (tecla>57) ) && ( tecla != '\b')){
                       e.consume(); //Evita el Evento
                   }//if1
               }//if2
            }// Cuando escribes y aparece una letra en el campo de texto
            @Override
            public void keyPressed(KeyEvent e) {
            }// Cuando presionas la tecla
            @Override
            public void keyReleased(KeyEvent e) {
            }//
        });
    }//initComplements

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        jTextField1.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
